"I" %p% "love" %p% "R"
"Hello" %p% "world"
info()
"this is a sting" %p% "and this is another"
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
calss(t1)
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
q()
z <- c(1, 2, 4)
z
ls()
x <- c(2, 3, 4)
ls()
x %*% z
x * z
zT
z
dim(z)
dim(z) = c(3, 1)
z
x
dim(x) = c(1, 3)
x
x * z
x %*% z
z %*% x
z
x
eye(3)
identity(3)
diag(3)
3*diag(3)
vector(10)
vector(mode = "numeric", length = 10)
vector(mode = "numeric", length = 10) + 2
q()
x <- list(a=1:4, b=rnorm(10), c=rnorm(20, 1), d=rnorm(100, 5))
lapply(x, mean)
runif?
lapply(1:4, runif)
lapply(1:4, runif, min=0, max=10)
function(m) m+2
ls()
x <- function(m){
m+2
}
x(2)
rm(x)
ls()
print("Hello world")
python
q()
library(swirl)
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 6
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE )
TRUE || c(TRUE, FALSE, FALSE )
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints  > 0)
q()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
csl_vect <- sapply(flags, class)
csl_vect <- sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6,))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
cls
rm(list = ls())
ls()
x <- c('win', 'loss', 'draw', 'win', 'win', 'loss', 'draw', levels(c('win', 'loss', 'draw')))
x
levels(x)
x
class(x)
table(x)
`levels<-`(x)
x
factor(x, levels = c('win', 'loss', 'draw'))
x <- factor(x, levels = c('win', 'loss', 'draw'))
x
class(x)
table(x)
class(table(x))
my_table  <- table(x)
my_table
my_table[1]
my_table[1:2]
my_table[1:2,]
dim(x)
dim(my_table)
my_table['win']
my_table[['win']]
my_table['win']
ls()
ls()
history()
history()
q()
getwd()
anova_data <- read.csv("C:/Hindu College/Fifth Semester/Linear Models/prac11_data.csv")
View(anova_data)
oneway.test(bulb_life ~ batch, data=anova_data, var.equal = TRUE)
x <- c(1, 2, 3, 4)
x
class(x)
lapply(x, function(x) 3*x + 1)
y <- lapply(x, function(x) 3*x + 1)
y
class(y)
y <- sapply(x, function(x) 3*x + 1)
y
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
data('12-1-26')
date()
?date
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
print("Hello owrld")
ls()
x <- seq(1, 10)
x
vapply(x, sqrt(x))
vapply(x, x+2)
vapply(x, sqrt)
vapply(x, sqrt, "array")
vapply(x, sqrt, "numeric")
?vapply
vapply(x, sqrt, simplify = "numeric")
vapply(x, sqrt, FUN.VALUE = "numeric")
sapply(x, sqrt)
vapply(x, sqrt, "double")
vapply(x, sqrt, double)
vapply(x, sqrt, FUN.VALUE = double)
vapply(x, sqrt, FUN.VALUE = 'double')
vapply(x, sqrt, FUN.VALUE = 0)
vapply(x, sqrt, FUN.VALUE = 0L)
vapply(x, sqrt, FUN.VALUE = 'character')
x <- c('a', 'b', 'c')
x
x*x
x + 'd'
x[[1]]
x[1]
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, character)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, unique, character(1))
vapply(flags, unique, character(200))
ok()
vapply(flags, unique, numeric(1))
ok()
vapply(flags, unique, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
info()
bye()
x <- matrix(rnorm(20), nrow = 4, ncol = 5)
x
apply(x, 2, sum)
sum(x[1,])
x[1,]
x[,1]
sum(x[,1])
q()
x <- c(1, 2, 3, 4)
for(i in x){
print(i)
}
x <- c(1, 2, 3, 4)
for(i in seq(1, 10, 2)){
print(i)
}
rm(list = ls())
i  <- 10
while(i <= 10){}
while(i <= 10){
print(i)
i <- i - 1
}
exit()
quit()
x <- matrix(rnorm(50), cols = 5, rows = 10)
x <- matrix(rnorm(50), ncol = 5, nrow = 10)
x
apply(x, mean)
?apply
sapply(x, mean)
apply(x, mean, numeric(1))
apply(x, mean, numeric,1)
apply(x, mean, numeric)
apply(x, mean)
apply(x, numeric(1), mean)
apply(x, numeric, mean)
library(swirl)
swirl()
x
vapply(x, mean, numeric(1))
apply(x, 1, mean)
mean(x[,1])
mean(x[1,])
mean(x[2,])
apply(x, 2, mean)
vector_increment <- function(x, num=3){
x + 3
}
y  <- snorm()
x  <- rnorm(10)
x
x  <- rnorm(10)
x
vector_increment(x, 10)
x <- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
x
x[1]
x[1,]
x[[1]]
x[[2]]
x[[3]]
x[[5]]
x[[9]]
x[[4]]
x[[6]]
x[[7]]
x[[1]]
x[[1,2]]
x[[2,2]]
trace(x)
dim(x)
dim(x)
?dim
x
det(x)
x[,2]
x[][1,2]
x[1,2]
x[,c(1m2)]
x[,c(1,2)]
sample(1:100, 10)
sample(1:100, 100)
x <- matrix(sample(0:99, 100), nrow = 10)
x
diag(x)
sum(diag(x))
x <- matrix(rnorm(20), nrow = 10)
x
x
x <- matrix(rnorm(20), nrow = 10)
x
colnames?
?colnames
colnames(x) <- c("internal", "external")
x
install.packages("randomNames")
library(randomNames)
R.version
randomNames(10)
?`randomNames-package`
?`randomNames-package
?`randomNames
?randomNames
randomNames(10, which.names = "first")
randomNames(10, which.names = "first", gender = "male")
randomNames(10, which.names = "first", gender = "female")
x
rownames(x) <- randomNames(10, which.names = "first")
x
cumsum(x)
cumsum(x[,'internal'])
sum(x[,'internal'])
cls
x <- c("M", "F", "M", "M", "F", "F", "F", "M")
x
x_factor  <- factor(x, levels = c("M", "F"))
x_factor
str(x_factor)
sum(x_factor)
count(x_factor)
table(x_factor)
table(x)
x_factor  <- factor(x, levels = c("M", "F"), labels = c("Males", "Females"))
x
x_factor
rm(list = ls())
tom  <- data.frame("Tom", 37, FALSE, 183)
tim
tom
names(tom)
names(tom) <- c("name", "age", "child")
names(tom)
tom
names(tom) <- c("name", "age", "child", "height")
tom
View(tom)
View(tom)
edit(tom)
tom
edit(tom)
tom
edit(tom)
tom[c("name", "child")]
datasets::
?datasets::
library(help="datasets")
str(mtcars)
head(mtcars)
names(mtcars)
plot(mtcars$mpg)
row.names(mtcars)
plot(row.names(mtcars),mtcars$mpg)
plot(row.names(mtcars))
plot(mtcar)
plot(mtcars$cyl)
plot(mtcars$drat)
version.
version()
R.Version()
R.home()
xrHistogram?
?xrLinModel
lm?
?lm
?predict
x <- rnorm(50)
y <- rnorm(x)
plot(x, y)
exit()
q()
1.06^(-10) * (9287.2164/9712.0728) * 10,000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
263
2^3
1.06^(-10) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
1.06^(-10) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
1.06^(-10) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
(1.06^(-10)) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
1.06^(-10)
1.06^(-10) * (9287.2164/9712.0728)
1.06^(-10) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^(-5)))
(1- (8821.2612/9287.2164)*1.06^-5)
(11/24) * (1- (8821.2612/9287.2164)*1.06^-5)
(4.390 – (11/24) * (1- (8821.2612/9287.2164)*1.06^-5))
1.06^(-10) * (9287.2164/9712.0728) * 10000 * 12 * (4.390 - (11/24) * (1- (8821.2612/9287.2164)*1.06^-5))
4.390 - (11/24) * (1- (8821.2612/9287.2164)*1.06^-5)
100000*(16.652-12.682
-1.04^(5)*(9238.134/9647.797)*(9703.708/9848.431)*(14.871-10.494))
-1.04^(-5)*(9238.134/9647.797)*(9703.708/9848.431)*(14.871-10.494))
100000*(16.652-12.682-1.04^(5)*(9238.134/9647.797)*(9703.708/9848.431)*(14.871-10.494))
100000*(16.652-12.682-1.04^(-5)*(9238.134/9647.797)*(9703.708/9848.431)*(14.871-10.494))
x <- c(1, 2, 3)
mean(zx)
mean(x)
x <- c(1, 2, 3, 4, 5)
print(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?vif
??vif
library()
cks
library(car)
getwd()
install.packages()
install.packages("survival")
library(survival)
?survfit
time  <- c(2, 2, 3, 4,  4, 5, 6, 7)
status <- c(1, 0, 1, 1, 0, 1, 1, 1)
dim(time)
length(time)
length(status)
survival_data <- data.frame(time, status)
survival_data
km_fit <- survfit(Surv(survival_data$time, survival_data$status) ~ 1)
summary(km_fit)
km_fit$std.err
km_fit$std.err(1)
shiny::runApp('F:/shinyTest/Test_TimeTable')
runApp('F:/shinyTest/Test_TimeTable')
library(shiny)
pwd
dir
cwd()
pwd()
gcd()
runApp('F:/shinyTest/Test_TimeTable')
?swd
?gwd
set
setwd("F:/shinyTest/Test_TimeTable")
getwd()
runApp('F:/shinyTest/Test_02')
runApp()
runApp()
getwd()
read.csv("master.csv")
runApp()
runApp()
